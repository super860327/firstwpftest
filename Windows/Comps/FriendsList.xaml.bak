<TreeView x:Class="IDKin.IM.Windows.Comps.FriendsList" Style="{DynamicResource TreeViewStyle}" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TreeView.Resources>
    <Style x:Key="TreeViewStyle" TargetType="{x:Type TreeView}">
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
      <Setter Property="Control.Background" Value="#00FFFFFF" />
      <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
      <Setter Property="Control.BorderThickness" Value="0" />
      <Setter Property="FrameworkElement.Margin" Value="0,2,0,0" />
      <Setter Property="Control.Padding" Value="1" />
      <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
      <Setter Property="Control.VerticalContentAlignment" Value="Center" />
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TreeView}">
            <Border SnapsToDevicePixels="True" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
              <ScrollViewer Focusable="False" Background="#00FFFFFF" Padding="{TemplateBinding Control.Padding}" ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
                <ItemsPresenter />
              </ScrollViewer>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
      <Setter Property="UIElement.Focusable" Value="False" />
      <Setter Property="FrameworkElement.Width" Value="16" />
      <Setter Property="FrameworkElement.Height" Value="16" />
      <Setter Property="Control.Foreground" Value="#00FFFFFF" />
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Border Width="16" Height="16" Background="#00FFFFFF">
              <Border Name="border" Width="9" Height="9" SnapsToDevicePixels="True" Background="#00FFFFFF" VerticalAlignment="Center">
                <Image Name="imgExpand" Width="8" Height="8" Source="/IDKin.IM.Windows;component/Resources/Icon/ExpandIcon.png" />
              </Border>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="imgExpand" Property="Image.Source" Value="/IDKin.IM.Windows;component/Resources/Icon/unExpandIcon.png" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
      <Setter Property="Control.Background" Value="#00FFFFFF" />
      <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
      <Setter Property="Control.VerticalContentAlignment" Value="Center" />
      <Setter Property="Control.Padding" Value="1,0,0,0" />
      <Setter Property="Control.Foreground" Value="#FF000000" />
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TreeViewItem}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
              </Grid.RowDefinitions>
              <Border Name="Bd" CornerRadius="1" Grid.ColumnSpan="3" Background="#00FFFFFF" />
              <ToggleButton Name="Expander" Background="{TemplateBinding Control.Foreground}" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
              <Border SnapsToDevicePixels="True" Grid.Column="1" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}">
                <ContentPresenter Name="PART_Header" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="Left" ContentSource="Header" />
              </Border>
              <ItemsPresenter Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" />
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
              </Trigger>
              <Trigger Property="ItemsControl.HasItems" Value="False">
                <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Visible" />
              </Trigger>
              <Trigger Property="TreeViewItem.IsSelected" Value="True">
                <Setter TargetName="Bd" Property="Border.Background" Value="#FFD4FDCC" />
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="UIElement.IsMouseOver" Value="True" />
                  <Condition Property="ItemsControl.HasItems" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Property="Border.Background" Value="#FFF8F8D8" />
              </MultiTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="UIElement.IsMouseOver" Value="True" />
                  <Condition Property="ItemsControl.HasItems" Value="True" />
                  <Condition Property="TreeViewItem.IsExpanded" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Property="Border.Background" Value="#FFF8F8D8" />
              </MultiTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="TreeViewItem.IsSelected" Value="True" />
                  <Condition Property="TreeViewItem.IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Property="Border.Background" Value="#FFE8E8E8" />
                <Setter Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Control.Foreground" />
              </MultiTrigger>
              <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </TreeView.Resources>
  <TreeViewItem Name="RosterList" Header="我的好友" Margin="0,5,0,0" />
  <TreeViewItem Name="StrangerList" Header="陌生人" Margin="0,5,0,0" />
</TreeView>