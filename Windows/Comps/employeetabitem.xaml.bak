<TabItem x:Class="IDKin.IM.Windows.Comps.EmployeeTabItem" Header="同事" Loaded="TabItem_Loaded" 
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
         xmlns:rlli="clr-namespace:IDKin.IM.Windows.Comps">
    <TabItem.Resources>
        <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0" />
                <GradientStop Color="#EEE" Offset="1.0" />
            </GradientStopCollection>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0" />
                <GradientStop Color="#EEE" Offset="0.1" />
                <GradientStop Color="#EEE" Offset="0.9" />
                <GradientStop Color="#FFF" Offset="1.0" />
            </GradientStopCollection>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStopCollection>
                <GradientStop Color="#CCC" Offset="0.0" />
                <GradientStop Color="#444" Offset="1.0" />
            </GradientStopCollection>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0" />
                <GradientStop Color="#CCC" Offset="1.0" />
            </GradientStopCollection>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#E9F6FB" />
        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
        <ControlTemplate x:Key="ExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Border Name="Border" CornerRadius="2,0,0,0" Background="#00FFFFFF" BorderThickness="0,0,1,0">
                <Path Name="Arrow" Fill="#FF444444" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,4L4,0 8,4z" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Border.Background" Value="#00FFFFFF" />
                </Trigger>
                <Trigger Property="ButtonBase.IsPressed" Value="True">
                    <Setter TargetName="Border" Value="{StaticResource PressedBrush}" Property="Border.Background" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Arrow" Property="Path.Data" Value="M0,0L4,4 8,0z" />
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter TargetName="Border" Value="{StaticResource DisabledBackgroundBrush}" Property="Border.Background" />
                    <Setter TargetName="Border" Value="{StaticResource DisabledBorderBrush}" Property="Border.BorderBrush" />
                    <Setter Value="{StaticResource DisabledForegroundBrush}" Property="Control.Foreground" />
                    <Setter TargetName="Arrow" Value="{StaticResource DisabledForegroundBrush}" Property="Shape.Fill" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Name="ContentRow" Height="0" />
                            </Grid.RowDefinitions>
                            <Border Name="Border" Grid.Row="0" BorderBrush="#00FFFFFF" BorderThickness="0" CornerRadius="0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                        <GradientStopCollection>
                                            <GradientStop Color="#E9F6FB" Offset="1" />
                                            <GradientStop Color="#B0EFFF" Offset="0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton Grid.Column="0" OverridesDefaultStyle="True" Template="{StaticResource ExpanderToggleButtonStyle}" Background="{StaticResource NormalBrush}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" FocusVisualStyle="{x:Null}" />
                                    <ContentPresenter x:ConnectionId="2" Grid.Column="1" Margin="4" ContentSource="Header" RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                            <Border Name="Content" Grid.Row="1" Background="{StaticResource WindowBackgroundBrush}" BorderBrush="#00FFFFFF" BorderThickness="0" CornerRadius="0,0,2,2">
                                <ContentPresenter />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Expander.IsExpanded" Value="True">
                                <Setter TargetName="ContentRow" Value="{Binding ElementName=Content, Path=DesiredHeight}" Property="RowDefinition.Height" />
                                <Setter TargetName="Border" Property="FrameworkElement.ToolTip" Value="点击收起组织架构" />
                            </Trigger>
                            <Trigger Property="Expander.IsExpanded" Value="False">
                                <Setter TargetName="ContentRow" Value="{Binding ElementName=Content, Path=DesiredHeight}" Property="RowDefinition.Height" />
                                <Setter TargetName="Border" Property="FrameworkElement.ToolTip" Value="点击查看公司所有人" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter TargetName="Border" Value="{StaticResource DisabledBackgroundBrush}" Property="Border.Background" />
                                <Setter TargetName="Border" Value="{StaticResource DisabledBorderBrush}" Property="Border.BorderBrush" />
                                <Setter Value="{StaticResource DisabledForegroundBrush}" Property="Control.Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AddGroupButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Name="PART_border" CornerRadius="5" Height="24" Width="24">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="Gray" Opacity="0.5" />
                            </Border.BorderBrush>
                            <Image Name="PART_icon" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter TargetName="PART_border" Property="Border.Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#F3F3F3" Opacity="0.15" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_border" Property="Border.BorderThickness" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DefaultContextMenuStyle" TargetType="{x:Type ContextMenu}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="Grid.IsSharedSizeScope" Value="True" />
            <Setter Property="ContextMenu.HasDropShadow" Value="True" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Name="Border" Background="#FFDAF6FF" CornerRadius="5" BorderThickness="1" Margin="0,0,15,5">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#56d5ff" Opacity="0.5" />
                            </Border.BorderBrush>
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="1" Opacity="0.5" />
                            </Border.Effect>
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContextMenu.HasDropShadow" Value="True">
                                <Setter TargetName="Border" Property="Border.Padding" Value="0,3,0,3" />
                                <Setter TargetName="Border" Property="Border.CornerRadius" Value="5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewStyle" TargetType="{x:Type TreeView}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Control.Background" Value="#00FFFFFF" />
            <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            <Setter Property="Control.BorderThickness" Value="0" />
            <Setter Property="FrameworkElement.Margin" Value="0,2,0,0" />
            <Setter Property="Control.Padding" Value="1" />
            <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeView}">
                        <Border SnapsToDevicePixels="True" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                            <ScrollViewer Focusable="False" Background="#00FFFFFF" Padding="{TemplateBinding Control.Padding}" ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="UIElement.Focusable" Value="False" />
            <Setter Property="FrameworkElement.Width" Value="16" />
            <Setter Property="FrameworkElement.Height" Value="16" />
            <Setter Property="Control.Foreground" Value="#00FFFFFF" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Width="16" Height="16" Background="#00FFFFFF">
                            <Border Name="border" Width="9" Height="9" SnapsToDevicePixels="True" Background="#00FFFFFF" VerticalAlignment="Center">
                                <Image Name="imgExpand" Width="8" Height="8" Source="/IDKin.IM.Windows;component/Resources/Icon/ExpandIcon.png" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter TargetName="imgExpand" Property="Image.Source" Value="/IDKin.IM.Windows;component/Resources/Icon/unExpandIcon.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Control.Background" Value="#00FFFFFF" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
            <Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <Setter Property="Control.Padding" Value="1,0,0,0" />
            <Setter Property="Control.Foreground" Value="#FF000000" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border Name="Bd" CornerRadius="1" Grid.ColumnSpan="3" Background="#00FFFFFF" />
                            <ToggleButton Name="Expander" Background="{TemplateBinding Control.Foreground}" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Border SnapsToDevicePixels="True" Grid.Column="1" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}">
                                <ContentPresenter Name="PART_Header" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="Left" ContentSource="Header" />
                            </Border>
                            <ItemsPresenter Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="TreeViewItem.IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Border.Background" Value="#FFD4FDCC" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="UIElement.IsMouseOver" Value="True" />
                                    <Condition Property="ItemsControl.HasItems" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Border.Background" Value="#FFF8F8D8" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="UIElement.IsMouseOver" Value="True" />
                                    <Condition Property="ItemsControl.HasItems" Value="True" />
                                    <Condition Property="TreeViewItem.IsExpanded" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Border.Background" Value="#FFF8F8D8" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TreeViewItem.IsSelected" Value="True" />
                                    <Condition Property="TreeViewItem.IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Border.Background" Value="#FFE8E8E8" />
                                <Setter Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Control.Foreground" />
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </TabItem.Resources>
    <Border Background="#FFE6F8FD" Margin="-5">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Name="DepartmentRow" Height="*" />
                <RowDefinition Name="OrganizationRow" Height="25" />
                <RowDefinition Name="EnterpriseGroupRow" Height="136" />
            </Grid.RowDefinitions>
            <TreeView Name="FirstTreeView" Grid.Row="0" Style="{StaticResource TreeViewStyle}" MouseLeftButtonUp="FirstTreeView_MouseLeftButtonUp">
                <rlli:RecentLinkListItem x:Name="RecentLinkListItem" Expanded="RecentLinkListItem_Expanded" Header="最近联系人" Padding="0,4,0,4" ContextMenu="{x:Null}" />
                <rlli:SelfDepartment x:Name="SelfDepartmentItem" Header="自己的部门" Padding="0,4,0,4" Visibility="Hidden" FrameworkElement.ContextMenu="{x:Null}" />
            </TreeView>
            <Expander Name="OrgExpander" Grid.Row="1" Style="{StaticResource ExpanderStyle}" Expanded="OrgExpander_Expanded" Collapsed="OrgExpander_Collapsed">
                <Expander.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="组织架构" VerticalAlignment="Center" />
                        <TextBlock Name="tbkEmpCount" VerticalAlignment="Center" />
                    </StackPanel>
                </Expander.Header>
                <rlli:DepartmentTreeView x:Name="DepartmentTree" Grid.Row="0" BorderThickness="0" />
            </Expander>
            <Border Grid.Row="2">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStopCollection>
                            <GradientStop Color="#F3F3F3" Offset="1" />
                            <GradientStop Color="#E9F6FB" Offset="0.5" />
                            <GradientStop Color="#CAF2FD" Offset="0" />
                        </GradientStopCollection>
                    </LinearGradientBrush>
                </Border.Background>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StatusBar Name="GridHideBar" Grid.Row="0" Background="#00FFFFFF" BorderBrush="#00FFFFFF" BorderThickness="0" Initialized="GridHideBar_Initialized" MouseDown="GridHideBar_MouseDown">
                        <TextBlock Text="企业内群" VerticalAlignment="Center" Margin="2,0,0,0" TextBlock.FontFamily="宋体" />
                    </StatusBar>
                    <Button Name="btnAddGroup" Grid.Row="0" Style="{StaticResource AddGroupButtonStyle}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,20,0" ToolTip="添加企业内群" Click="btnAddGroup_Click">
                        <Button.ContextMenu>
                            <ContextMenu Name="treEntGroupContextMenu" Style="{StaticResource DefaultContextMenuStyle}">
                                <MenuItem Header="创建群组" DataContext="add" Click="treEntGroupMenuItem_Click" />
                                <MenuItem Header="刷新列表" DataContext="update" Click="treEntGroupMenuItem_Click" />
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <Path Name="pathGridHide" Grid.Row="0" Fill="#FF444444" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0" Data="M0,0L4,4 8,0z" MouseDown="GridHideBar_MouseDown" />
                    <rlli:EnterpriseGroupListView x:Name="listEntGroup" Grid.Row="1" BorderThickness="0" BorderBrush="#00FFFFFF" Background="#00FFFFFF" />
                </Grid>
            </Border>
        </Grid>
    </Border>
</TabItem>