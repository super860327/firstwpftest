<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:tab="clr-namespace:IDKin.IM.CustomComponents.Controls.TabControl;assembly=IDKin.IM.CustomComponents"
                    xmlns:Controls="clr-namespace:IDKin.IM.CustomComponents.Controls;assembly=IDKin.IM.CustomComponents"
                    xmlns:ap="clr-namespace:IDKin.IM.CustomComponents.Controls;assembly=IDKin.IM.CustomComponents">
    <Style x:Key="HyperlinkTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="FrameworkElement.Cursor" Value="Hand" />
                <Setter Property="TextBlock.Foreground" Value="#FF0000FF" />
                <Setter Property="TextBlock.TextDecorations" Value="Underline" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="VTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FrameworkElement.Width" Value="12" />
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="FrameworkElement.Margin" Value="0,10,0,10" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    </Style>
    <Style x:Key="VTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="FrameworkElement.Margin" Value="0,-2,0,3" />
        <Setter Property="FrameworkElement.Width" Value="25" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="PART_Border" BorderBrush="#00FFFFFF" BorderThickness="0">
                            <Border.Background>
                                <ImageBrush ImageSource="/IDKin.IM.Windows;component/Resources/TabItem/VNormal.png" />
                            </Border.Background>
                        </Border>
                        <ContentPresenter Name="ContentSite" ContentSource="Header" Margin="0,5,0,5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabItem.IsSelected" Value="True">
                            <Setter TargetName="PART_Border" Property="Border.Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/IDKin.IM.Windows;component/Resources/TabItem/VPress.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabItem.IsSelected" Value="False">
                            <Setter TargetName="PART_Border" Property="Border.Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/IDKin.IM.Windows;component/Resources/TabItem/VNormal.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ContentTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="FrameworkElement.Margin" Value="-5,-1,0,0" />
        <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Name="Border" Padding="4">
                        <ContentPresenter Name="Content" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabItem.IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Border.Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/IDKin.IM.Windows;component/Resources/TabItem/HPress.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabItem.IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Border.Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/IDKin.IM.Windows;component/Resources/TabItem/HNormal.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CloseableTabItemButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.Padding" Value="4" />
        <Setter Property="FrameworkElement.Margin" Value="2,0,0,0" />
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Name="Chrome" SnapsToDevicePixels="True" Fill="#FF1D8FBB" Visibility="Collapsed" Opacity="0.80" />
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="Chrome" Property="UIElement.Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="Chrome" Property="UIElement.Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Control.Foreground" Value="#FFADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<Style x:Key="CloseableTabItemNormalStyle" TargetType="{x:Type Controls:CloseableTabItem}">-->
    <Style x:Key="CloseableTabItemNormalStyle" TargetType="{x:Type Controls:CloseableTabItem}">
        <Setter Property="FrameworkElement.Margin" Value="0,-1,0,0" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:CloseableTabItem}">
                    <Border Name="Border" Padding="4">
                        <DockPanel Name="ContentPanel">
                            <Button Name="PART_Close" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="16" Height="16" DockPanel.Dock="Right" ToolTip="Close Tab" Style="{StaticResource CloseableTabItemButtonStyle}">
                                <Path Name="Path" Stretch="Fill" StrokeThickness="0.5" Stroke="#FF333333" Fill="#FF969696" Data="F1M2.28484E-07,1.33331L1.33333,0 4.00001,2.66669 6.66667,6.10352E-05 8,1.33331 5.33334,4 8,6.66669 6.66667,8 4,5.33331 1.33333,8 1.086E-07,6.66669 2.66667,4 2.28484E-07,1.33331z" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                            </Button>
                            <ContentPresenter Name="Content" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True" DockPanel.Dock="Left" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Close" Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="Path" Property="Shape.Fill" Value="#FFADFFFE" />
                        </Trigger>
                        <Trigger SourceName="PART_Close" Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="Path" Property="Shape.Fill" Value="#FFADFFFE" />
                        </Trigger>
                        <Trigger Property="TabItem.IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Border.Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/IDKin.IM.Windows;component/Resources/TabItem/HPress.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabItem.IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Border.Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/IDKin.IM.Windows;component/Resources/TabItem/HNormal.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CloseableTabItemFlashingStyle" TargetType="{x:Type Controls:CloseableTabItem}">
        <Setter Property="FrameworkElement.Margin" Value="0,-1,0,0" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:CloseableTabItem}">
                    <Border Name="Border" Padding="4">
                        <DockPanel Name="ContentPanel">
                            <Button Name="PART_Close" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="16" Height="16" DockPanel.Dock="Right" ToolTip="Close Tab" Style="{StaticResource CloseableTabItemButtonStyle}">
                                <Path Name="Path" Stretch="Fill" StrokeThickness="0.5" Stroke="#FF333333" Fill="#FF969696" Data="F1M2.28484E-07,1.33331L1.33333,0 4.00001,2.66669 6.66667,6.10352E-05 8,1.33331 5.33334,4 8,6.66669 6.66667,8 4,5.33331 1.33333,8 1.086E-07,6.66669 2.66667,4 2.28484E-07,1.33331z" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                            </Button>
                            <ContentPresenter Name="Content" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True" DockPanel.Dock="Left" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Close" Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="Path" Property="Shape.Fill" Value="#FFADFFFE" />
                        </Trigger>
                        <Trigger SourceName="PART_Close" Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="Path" Property="Shape.Fill" Value="#FFADFFFE" />
                        </Trigger>
                        <Trigger Property="TabItem.IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Border.Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/IDKin.IM.Windows;component/Resources/TabItem/HPress.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabItem.IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Border.Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/IDKin.IM.Windows;component/Resources/TabItem/HFlashing.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="AddFriends">
        <Border Name="PART_Border" CornerRadius="3" Background="#00FFFFFF" BorderThickness="1" BorderBrush="#00FFFFFF" Width="20">
            <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                <Image Width="16" Height="16" Stretch="Fill" Source="/IDKin.IM.Windows;component/Resources/Image/findContact.png" />
                <TextBlock Text="查找">
                    <TextBlock.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="FrameworkElement.Width" Value="12" />
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            <Setter Property="TextBlock.TextAlignment" Value="Center" />
                            <Setter Property="FrameworkElement.Margin" Value="0,10,0,0" />
                        </Style>
                    </TextBlock.Resources>
                </TextBlock>
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="PART_Border" Property="Border.BorderBrush" Value="#FF02A0C7" />
                <Setter TargetName="PART_Border" Property="Border.Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                            <GradientStop Offset="1" Color="#66FFFFFF" />
                            <GradientStop Color="#B2FFFFFF" />
                            <GradientStop Color="#008FA5E8" Offset="0.634" />
                            <GradientStop Color="#00BECBF1" Offset="0.5" />
                            <GradientStop Color="#7FF9FAFD" Offset="0.086" />
                            <GradientStop Offset="0.97" Color="#33FFFFFF" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="HTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Margin="3,5,3,5">
                        <Border Name="Border" Background="#00FFFFFF" BorderBrush="#00FFFFFF" BorderThickness="1" CornerRadius="5">
                            <ContentPresenter Name="ContentSite" ContentSource="Header" Margin="10,2,10,2" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabItem.IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Border.Background" Value="#FF46D7EB" />
                        </Trigger>
                        <Trigger Property="TabItem.IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Border.Background" Value="#00FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EmailTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Name="Border" Background="#00FFFFFF" BorderThickness="0">
                        <TextBlock Name="ContentSite" Text="{TemplateBinding HeaderedContentControl.Header}" Margin="10,4,10,4" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabItem.IsSelected" Value="True">
                            <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="#FF009AE2" />
                            <Setter TargetName="Border" Property="Border.Background" Value="#FFDFF9FF" />
                        </Trigger>
                        <Trigger Property="TabItem.IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Border.Background" Value="#00FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ImageButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" CornerRadius="2" BorderThickness="0.5" BorderBrush="#00FFFFFF" Background="#00FFFFFF">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="UIElement.Opacity" Value="0.9" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="Border" Property="UIElement.Opacity" Value="0.8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefaultContextMenuStyle" TargetType="{x:Type ContextMenu}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="ContextMenu.HasDropShadow" Value="True" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Name="Border" Background="#FFDAF6FF" CornerRadius="5" BorderThickness="1" Margin="0,0,15,5">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#56d5ff" Opacity="0.5" />
                        </Border.BorderBrush>
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="1" Opacity="0.5" />
                        </Border.Effect>
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ContextMenu.HasDropShadow" Value="True">
                            <Setter TargetName="Border" Property="Border.Padding" Value="0,3,0,3" />
                            <Setter TargetName="Border" Property="Border.CornerRadius" Value="5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="Control.Padding" Value="0,4.5,0,0" />
                <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            </Style>
        </Style.Resources>
    </Style>
    <Style x:Key="BottomTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextBlock.TextWrapping" Value="NoWrap" />
        <Setter Property="TextBlock.TextTrimming" Value="WordEllipsis" />
    </Style>
    <Style x:Key="AdvertisementStyle" BasedOn="{StaticResource BottomTextBlockStyle}" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="TextBlock.TextDecorations" Value="Underline" />
                <Setter Property="TextBlock.FontStyle" Value="Italic" />
                <Setter Property="TextBlock.Foreground" Value="#FF0000FF" />
                <Setter Property="FrameworkElement.Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PageButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Width" Value="16" />
        <Setter Property="FrameworkElement.Height" Value="16" />
        <Setter Property="FrameworkElement.Margin" Value="2,0,2,0" />
        <Setter Property="Control.Foreground" Value="#FF006290" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="PART_Border" CornerRadius="3" BorderThickness="1" BorderBrush="#00FFFFFF">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="Border.Background" Value="#FFB7E3EF" />
                            <Setter TargetName="PART_Border" Property="Border.BorderBrush" Value="#FFA1D0E4" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="PART_Border" Property="UIElement.Opacity" Value="0.75" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type Controls:Accordion}" TargetType="{x:Type Controls:Accordion}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:Accordion}">
                    <Border Background="#FFFFFFFF" BorderBrush="#00FFFFFF" BorderThickness="0">
                        <ap:AccordionPanel Name="PART_ItemsHost" IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type Controls:AccordionItem}" TargetType="{x:Type Controls:AccordionItem}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:AccordionItem}">
                    <Border BorderBrush="#00FFFFFF" BorderThickness="0">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Color="#B0F2FF" Offset="0" />
                                <GradientStop Color="#DBF9FF" Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <DockPanel>
                            <ContentPresenter Name="ExpandHead" DockPanel.Dock="Top" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderedContentControl.HeaderTemplateSelector}" ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" />
                            <ContentPresenter Name="ContentHost" DockPanel.Dock="Bottom" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}">
                                <ContentPresenter.LayoutTransform>
                                    <ScaleTransform x:Name="ContentHostHeightTransform" ScaleY="0.0" />
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnExpanded">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentHostHeightTransform" Storyboard.TargetProperty="ScaleY">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.08" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnCollapsed">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentHostHeightTransform" Storyboard.TargetProperty="ScaleY">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.08" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Controls:AccordionItem.IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OnExpanded}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource OnCollapsed}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PromptingTextBoxStyle" TargetType="{x:Type Controls:PromptingTextBox}">
        <Setter Property="FrameworkElement.Width" Value="215" />
        <Setter Property="FrameworkElement.Height" Value="25" />
        <Setter Property="Control.Background" Value="#FF0073AF" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.BorderBrush" Value="#FF00D2FF" />
        <Setter Property="Control.Foreground" Value="#FF73F7FF" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FrameworkElement.ContextMenu" Value="{x:Null}" />
        <Setter Property="UIElement.AllowDrop" Value="True" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:PromptingTextBox}">
                    <Border Name="PART_Border" CornerRadius="2" Padding="2" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <Grid VerticalAlignment="Center">
                            <TextBlock Name="PART_Prompt" TextBlock.FontStyle="Italic" />
                            <ScrollViewer Name="PART_ContentHost" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsFocused" Value="True">
                            <Setter TargetName="PART_Border" Property="UIElement.Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0.2" Color="#FFFFFF" BlurRadius="10" RenderingBias="Quality" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Prompt" Property="UIElement.Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="InputErrorTemplate">
        <DockPanel VerticalAlignment="Center">
            <Border Name="Error_Border" BorderBrush="#FFFF0000" BorderThickness="1">
                <AdornedElementPlaceholder />
            </Border>
        </DockPanel>
    </ControlTemplate>
    <Style x:Key="InputErrorTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource InputErrorTemplate}" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
                <Setter Property="FrameworkElement.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
            <Trigger Property="Validation.HasError" Value="False">
                <Setter Property="Control.BorderBrush" Value="#FF7A7A7A" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="InputErrorDatePickerStyle" TargetType="{x:Type DatePicker}">
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource InputErrorTemplate}" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="FrameworkElement.ToolTip" Value="{Binding Path=(Validation.Errors).CurrentItem.ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DesktopAlertBaseStyle" BasedOn="{StaticResource WindowStyle}" TargetType="{x:Type Controls:DesktopAlertBase}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:DesktopAlertBase}">
                    <Border Name="OuterBorder" Style="{DynamicResource OuterBorderStyle}">
                        <Border Name="InnerBorder" Style="{DynamicResource InnerBorderStyle}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.ColumnSpan="2" BorderThickness="0">
                                        <Border.Background>
                                            <ImageBrush ImageSource="/IDKin.IM.Windows;component/Resources/Image/topGlowbg.png" AlignmentY="Top" />
                                        </Border.Background>
                                    </Border>
                                    <Image Name="imgIcon" Width="16" Height="16" SnapsToDevicePixels="True" Stretch="Fill" HorizontalAlignment="Left" Margin="2,0,0,0" VerticalAlignment="Center" Source="/IDKin.IM.Windows;component/Resources/Icon/ico_16.png" />
                                    <TextBlock Grid.Column="0" Margin="22,0,0,0" TextBlock.FontWeight="Bold" TextBlock.FontSize="12" TextBlock.Foreground="#FFFFFFFF" Text="{TemplateBinding Window.Title}" VerticalAlignment="Center">
                                        <TextBlock.Effect>
                                            <DropShadowEffect Color="Gray" ShadowDepth="3" Opacity="0.5" />
                                        </TextBlock.Effect>
                                    </TextBlock>
                                    <ap:ImageButton Name="PART_CloseButton" Width="16" Height="16" ToolTip="关闭" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" NormalImage="/IDKin.IM.Windows;component/Resources/Image/close.png" HoverImage="/IDKin.IM.Windows;component/Resources/Image/closeOver.png" PressedImage="/IDKin.IM.Windows;component/Resources/Image/closePress.png" Margin="0,0,2,0" />
                                </Grid>
                                <ContentControl Grid.Row="1" Content="{TemplateBinding ContentControl.Content}" />
                            </Grid>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />
    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
    <Style x:Key="iconToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FrameworkElement.Width" Value="20" />
        <Setter Property="FrameworkElement.Height" Value="20" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="PART_Border" CornerRadius="5" Background="#00FFFFFF" BorderBrush="#00FFFFFF" BorderThickness="1">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="FrameworkElement.Cursor" Value="Hand" />
                            <Setter TargetName="PART_Border" Property="UIElement.Opacity" Value="0.9" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="PART_Border" Property="UIElement.Opacity" Value="0.8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type tab:DropDownTabControl}" TargetType="{x:Type tab:DropDownTabControl}">
        <Setter Property="FrameworkElement.Margin" Value="5,4,4,4" />
        <Setter Property="Control.BorderBrush" Value="#FF00A2E9" />
        <Setter Property="Control.BorderThickness" Value="1,0,0,0" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tab:DropDownTabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#00FFFFFF" />
                        <ToggleButton Name="PART_DropDown" Grid.Column="3" Panel.ZIndex="1" Style="{StaticResource iconToggleButtonStyle}" Visibility="Collapsed">
                            <Image Stretch="None" Source="/IDKin.IM.Windows;component/Resources/Icon/dropdownIcon.png" />
                        </ToggleButton>
                        <TabPanel Name="PART_HeaderPanel" Grid.Row="0" KeyboardNavigation.TabIndex="1" Background="#00FFFFFF" IsItemsHost="True" />
                        <Border Name="Border" Grid.Row="1" Grid.ColumnSpan="4" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2">
                            <ContentPresenter Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{StaticResource DisabledForegroundBrush}" Property="Control.Foreground" />
                            <Setter TargetName="Border" Value="{StaticResource DisabledBorderBrush}" Property="Border.BorderBrush" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewStyle" TargetType="{x:Type TreeView}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="FrameworkElement.Margin" Value="0,2,0,0" />
        <Setter Property="Control.Padding" Value="1" />
        <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border SnapsToDevicePixels="True" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <ScrollViewer Focusable="False" Background="#00FFFFFF" Padding="{TemplateBinding Control.Padding}" ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="FrameworkElement.Width" Value="16" />
        <Setter Property="FrameworkElement.Height" Value="16" />
        <Setter Property="Control.Foreground" Value="#00FFFFFF" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="16" Height="16" Background="#00FFFFFF">
                        <Border Name="border" Width="9" Height="9" SnapsToDevicePixels="True" Background="#00FFFFFF" VerticalAlignment="Center">
                            <Image Name="imgExpand" Width="8" Height="8" Source="/IDKin.IM.Windows;component/Resources/Icon/ExpandIcon.png" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="imgExpand" Property="Image.Source" Value="/IDKin.IM.Windows;component/Resources/Icon/unExpandIcon.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.Padding" Value="1,0,0,0" />
        <Setter Property="Control.Foreground" Value="#FF000000" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border Name="Bd" CornerRadius="1" Grid.ColumnSpan="3" Background="#00FFFFFF" />
                        <ToggleButton Name="Expander" Background="{TemplateBinding Control.Foreground}" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border SnapsToDevicePixels="True" Grid.Column="1" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}">
                            <ContentPresenter Name="PART_Header" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="Left" ContentSource="Header" />
                        </Border>
                        <ItemsPresenter Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TreeViewItem.IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Border.Background" Value="#FFD4FDCC" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="ItemsControl.HasItems" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Border.Background" Value="#FFF8F8D8" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="ItemsControl.HasItems" Value="True" />
                                <Condition Property="TreeViewItem.IsExpanded" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Border.Background" Value="#FFF8F8D8" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TreeViewItem.IsSelected" Value="True" />
                                <Condition Property="TreeViewItem.IsSelectionActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Border.Background" Value="#FFE8E8E8" />
                            <Setter Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Control.Foreground" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>